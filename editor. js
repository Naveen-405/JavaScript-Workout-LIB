import React, { useState } from 'react';

const BlogEditor = () => {
  const [sections, setSections] = useState([]);

  // Function to add a new section based on type
  const addSection = (type) => {
    setSections([...sections, { type, content: '' }]);
  };

  // Function to update section content
  const updateSectionContent = (index, content) => {
    const updatedSections = sections.map((section, i) =>
      i === index ? { ...section, content } : section
    );
    setSections(updatedSections);
  };

  return (
    <div className="blog-editor">
      <h2>Blog Editor</h2>

      {/* Buttons to add content */}
      <div className="buttons">
        <button onClick={() => addSection('heading')}>Add Heading</button>
        <button onClick={() => addSection('text')}>Add Text</button>
        <button onClick={() => addSection('list')}>Add List</button>
        <button onClick={() => addSection('toc')}>Add Table of Contents</button>
      </div>

      {/* Editable Sections */}
      <div className="editor-content">
        {sections.map((section, index) => (
          <div key={index} className="section">
            {section.type === 'heading' && (
              <input
                type="text"
                placeholder="Heading"
                value={section.content}
                onChange={(e) =>
                  updateSectionContent(index, e.target.value)
                }
              />
            )}
            {section.type === 'text' && (
              <textarea
                placeholder="Enter text"
                value={section.content}
                onChange={(e) =>
                  updateSectionContent(index, e.target.value)
                }
              />
            )}
            {section.type === 'list' && (
              <textarea
                placeholder="Enter list items (comma separated)"
                value={section.content}
                onChange={(e) =>
                  updateSectionContent(index, e.target.value)
                }
              />
            )}
            {section.type === 'toc' && (
              <p>Table of Contents will be generated based on headings.</p>
            )}
          </div>
        ))}
      </div>

      {/* Render Blog */}
      <div className="blog-preview">
        <h2>Blog Preview</h2>
        {sections.map((section, index) => (
          <div key={index} className="section-preview">
            {section.type === 'heading' && <h3>{section.content}</h3>}
            {section.type === 'text' && <p>{section.content}</p>}
            {section.type === 'list' && (
              <ul>
                {section.content
                  .split(',')
                  .map((item, idx) => (
                    <li key={idx}>{item.trim()}</li>
                  ))}
              </ul>
            )}
            {section.type === 'toc' && (
              <div>
                <h4>Table of Contents</h4>
                <ul>
                  {sections
                    .filter((sec) => sec.type === 'heading')
                    .map((headingSection, idx) => (
                      <li key={idx}>{headingSection.content}</li>
                    ))}
                </ul>
              </div>
            )}
          </div>
        ))}
      </div>
<style jsx>
{`
.blog-editor {
  padding: 20px;
}

.buttons button {
  margin-right: 10px;
  margin-bottom: 20px;
}

.editor-content .section {
  margin-bottom: 20px;
}

.blog-preview {
  margin-top: 40px;
  padding: 20px;
  border-top: 1px solid #ccc;
}
`} 

</style>
    </div>
  );
};

export default BlogEditor;